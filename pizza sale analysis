This is pizza sales analysis using sql queries
-- first step to create a database
create database pizzahut;
-- second step to import csv file  data in mysql database

select * from pizzahut.pizzas;

-- create table for change data type of data
create table pizzahut.orders (order_id int primary key,
order_date date not null,
order_time time not null);

create table pizzahut.order_details(order_details_id int primary key,
order_id int not null,
pizza_id text not null,
quantity int not null);

select * from pizzahut.order_details;

SQL Queries start:
1-- Retrieve the total number of orders placed.
select * from pizzahut.orders;
-- hame btana hai ki order table me kitna data hai to hm count() ka use kringe;
select count(order_id) from pizzahut.orders;

2-- Calculate the total revenue generated from pizza sales.
-- quantity * price=total sales( isse hme pta chal jayega ki kitni quantity se hme kitna profit hua hai
-- like jese hmne 5 quantity pizza ki sale ki or per quantity 60 rupes ki hai to 5*60=300 profit 
select  (order_details.quantity * pizzas.price) as total_sales
from  pizzahut.order_details join pizzahut.pizzas
on pizzahut.order_details.pizza_id=pizzahut.pizzas.pizza_id;

-- now ab hm sabi ko total kr dinge 
-- using sum() we calculate total revanue generate 
select sum(order_details.quantity * pizzas.price) as total_profit
from pizzahut.order_details join pizzahut.pizzas
on order_details.pizza_id=pizzas.pizza_id;

3-- Identify the highest-priced pizza.
-- first step we join name and price of pizza
select pizza_types.name , pizzas.price
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id;

-- now second step to find hightest priced pizza
select pizza_types.name , pizzas.price
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
order by pizzas.price desc --  isse data decending ho gaya 
limit 1;--  isse hame hightest price mill gaya

4-- Identify the most common pizza size ordered.
select pizzas.size , count(pizza_types.pizza_type_id)
from pizzahut.pizzas join pizzahut.pizza_types
on pizza_types.pizza_type_id=pizzas.pizza_type_id
group by pizzas.size;
-- --second method
select pizzas.size, count(order_details.order_details_id)
from pizzahut.pizzas join pizzahut.order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizzas.size;

5-- List the top 5 most ordered pizza types along with their quantities.
-- maximum pizza order with the quantity
select pizza_types.name , sum(order_details.quantity) as quantity
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join pizzahut.order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.name  order by quantity desc limit 5;

6-- Join the necessary tables to find the total quantity of each pizza category ordered.

select pizza_types.category , sum(order_details.quantity) as Quantity
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join pizzahut.order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.category;

select pizza_types.name , sum(order_details.quantity)
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join pizzahut.order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.name   limit 5;

7-- Determine the distribution of orders by hour of the day.

select hour( orders.order_time) ,count( orders.order_id) 
from pizzahut.orders
group by hour(orders.order_time);

8-- Join relevant tables to find the category-wise distribution of pizzas.

select pizza_types.category , count(pizzas.pizza_id)
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
group by pizza_types.category ;

select pizza_types.category , count(pizza_types.pizza_type_id)
from pizzahut.pizza_types
group by pizza_types.category;

9 -- Group the orders by date and calculate the average number of pizzas ordered per day.
 select avg(quantity) from
 (select orders.order_date , sum(order_details.quantity) as quantity
 from pizzahut.orders join pizzahut.order_details
 on orders.order_id=order_details.order_id
 group by orders.order_date) as order_details;

 10--  Determine the top 3 most ordered pizza types based on revenue.

select pizza_types.name , sum(order_details.quantity * pizzas.price) as revenue
from pizzahut.pizza_types join pizzahut.pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join pizzahut.order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.name order by revenue desc limit 3;
